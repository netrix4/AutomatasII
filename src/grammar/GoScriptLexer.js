// Generated from ./grammar/GoScript.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,31,226,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,4,0,65,8,0,11,0,12,0,66,1,0,1,
0,1,1,1,1,1,1,1,1,3,1,75,8,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,96,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,
5,123,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,133,8,6,1,7,1,7,1,7,1,7,1,
7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,151,8,7,1,8,1,8,1,8,1,
8,3,8,157,8,8,1,9,4,9,160,8,9,11,9,12,9,161,1,10,4,10,165,8,10,11,10,12,
10,166,1,11,4,11,170,8,11,11,11,12,11,171,1,12,4,12,175,8,12,11,12,12,12,
176,1,13,4,13,180,8,13,11,13,12,13,181,1,14,1,14,1,15,1,15,1,16,1,16,4,16,
190,8,16,11,16,12,16,191,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,
20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
1,28,1,28,1,29,1,29,1,30,4,30,223,8,30,11,30,12,30,224,1,191,0,31,1,1,3,
2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
28,57,29,59,30,61,31,1,0,6,3,0,9,10,13,13,32,32,2,0,65,90,97,122,1,0,48,
57,3,0,65,90,94,94,97,122,3,0,48,57,65,90,97,122,2,0,10,10,13,13,239,0,1,
1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
0,0,0,59,1,0,0,0,0,61,1,0,0,0,1,64,1,0,0,0,3,74,1,0,0,0,5,76,1,0,0,0,7,95,
1,0,0,0,9,97,1,0,0,0,11,122,1,0,0,0,13,132,1,0,0,0,15,150,1,0,0,0,17,156,
1,0,0,0,19,159,1,0,0,0,21,164,1,0,0,0,23,169,1,0,0,0,25,174,1,0,0,0,27,179,
1,0,0,0,29,183,1,0,0,0,31,185,1,0,0,0,33,187,1,0,0,0,35,195,1,0,0,0,37,197,
1,0,0,0,39,199,1,0,0,0,41,201,1,0,0,0,43,203,1,0,0,0,45,205,1,0,0,0,47,207,
1,0,0,0,49,209,1,0,0,0,51,211,1,0,0,0,53,213,1,0,0,0,55,215,1,0,0,0,57,217,
1,0,0,0,59,219,1,0,0,0,61,222,1,0,0,0,63,65,7,0,0,0,64,63,1,0,0,0,65,66,
1,0,0,0,66,64,1,0,0,0,66,67,1,0,0,0,67,68,1,0,0,0,68,69,6,0,0,0,69,2,1,0,
0,0,70,71,5,103,0,0,71,75,5,111,0,0,72,73,5,71,0,0,73,75,5,79,0,0,74,70,
1,0,0,0,74,72,1,0,0,0,75,4,1,0,0,0,76,77,5,100,0,0,77,78,5,111,0,0,78,79,
5,116,0,0,79,80,5,110,0,0,80,81,5,117,0,0,81,82,5,109,0,0,82,6,1,0,0,0,83,
84,5,110,0,0,84,85,5,117,0,0,85,86,5,109,0,0,86,87,5,98,0,0,87,88,5,101,
0,0,88,96,5,114,0,0,89,90,5,78,0,0,90,91,5,85,0,0,91,92,5,77,0,0,92,93,5,
66,0,0,93,94,5,69,0,0,94,96,5,82,0,0,95,83,1,0,0,0,95,89,1,0,0,0,96,8,1,
0,0,0,97,98,5,108,0,0,98,99,5,101,0,0,99,100,5,116,0,0,100,101,5,116,0,0,
101,102,5,101,0,0,102,103,5,114,0,0,103,10,1,0,0,0,104,105,5,108,0,0,105,
106,5,101,0,0,106,107,5,116,0,0,107,108,5,116,0,0,108,109,5,101,0,0,109,
110,5,114,0,0,110,111,5,115,0,0,111,112,5,116,0,0,112,123,5,114,0,0,113,
114,5,76,0,0,114,115,5,69,0,0,115,116,5,84,0,0,116,117,5,84,0,0,117,118,
5,69,0,0,118,119,5,82,0,0,119,120,5,83,0,0,120,121,5,84,0,0,121,123,5,82,
0,0,122,104,1,0,0,0,122,113,1,0,0,0,123,12,1,0,0,0,124,125,5,115,0,0,125,
126,5,97,0,0,126,127,5,121,0,0,127,133,5,115,0,0,128,129,5,83,0,0,129,130,
5,65,0,0,130,131,5,89,0,0,131,133,5,83,0,0,132,124,1,0,0,0,132,128,1,0,0,
0,133,14,1,0,0,0,134,135,5,100,0,0,135,136,5,105,0,0,136,137,5,115,0,0,137,
138,5,112,0,0,138,139,5,108,0,0,139,140,5,97,0,0,140,141,5,121,0,0,141,151,
5,115,0,0,142,143,5,68,0,0,143,144,5,73,0,0,144,145,5,83,0,0,145,146,5,80,
0,0,146,147,5,76,0,0,147,148,5,65,0,0,148,149,5,89,0,0,149,151,5,83,0,0,
150,134,1,0,0,0,150,142,1,0,0,0,151,16,1,0,0,0,152,153,5,105,0,0,153,157,
5,102,0,0,154,155,5,73,0,0,155,157,5,70,0,0,156,152,1,0,0,0,156,154,1,0,
0,0,157,18,1,0,0,0,158,160,7,1,0,0,159,158,1,0,0,0,160,161,1,0,0,0,161,159,
1,0,0,0,161,162,1,0,0,0,162,20,1,0,0,0,163,165,7,2,0,0,164,163,1,0,0,0,165,
166,1,0,0,0,166,164,1,0,0,0,166,167,1,0,0,0,167,22,1,0,0,0,168,170,7,3,0,
0,169,168,1,0,0,0,170,171,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,24,
1,0,0,0,173,175,7,1,0,0,174,173,1,0,0,0,175,176,1,0,0,0,176,174,1,0,0,0,
176,177,1,0,0,0,177,26,1,0,0,0,178,180,7,4,0,0,179,178,1,0,0,0,180,181,1,
0,0,0,181,179,1,0,0,0,181,182,1,0,0,0,182,28,1,0,0,0,183,184,5,123,0,0,184,
30,1,0,0,0,185,186,5,125,0,0,186,32,1,0,0,0,187,189,3,51,25,0,188,190,9,
0,0,0,189,188,1,0,0,0,190,191,1,0,0,0,191,192,1,0,0,0,191,189,1,0,0,0,192,
193,1,0,0,0,193,194,3,51,25,0,194,34,1,0,0,0,195,196,5,59,0,0,196,36,1,0,
0,0,197,198,5,61,0,0,198,38,1,0,0,0,199,200,5,42,0,0,200,40,1,0,0,0,201,
202,5,47,0,0,202,42,1,0,0,0,203,204,5,43,0,0,204,44,1,0,0,0,205,206,5,45,
0,0,206,46,1,0,0,0,207,208,5,40,0,0,208,48,1,0,0,0,209,210,5,41,0,0,210,
50,1,0,0,0,211,212,5,34,0,0,212,52,1,0,0,0,213,214,5,91,0,0,214,54,1,0,0,
0,215,216,5,93,0,0,216,56,1,0,0,0,217,218,5,62,0,0,218,58,1,0,0,0,219,220,
5,60,0,0,220,60,1,0,0,0,221,223,7,5,0,0,222,221,1,0,0,0,223,224,1,0,0,0,
224,222,1,0,0,0,224,225,1,0,0,0,225,62,1,0,0,0,15,0,66,74,95,122,132,150,
156,161,166,171,176,181,191,224,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GoScriptLexer extends antlr4.Lexer {

    static grammarFileName = "GoScript.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'dotnum'", null, "'letter'", 
                         null, null, null, null, null, null, null, null, 
                         null, "'{'", "'}'", null, "';'", "'='", "'*'", 
                         "'/'", "'+'", "'-'", "'('", "')'", "'\"'", "'['", 
                         "']'", "'>'", "'<'" ];
	static symbolicNames = [ null, "WS", "GO", "DOTNUM", "NUMBER", "LETTER", 
                          "LETTERSTR", "SAYS", "DISPLAYS", "IF", "ID", "INT", 
                          "NO_ID", "CHARAS", "DISPLAYEDTEXT", "CBRACEO", 
                          "CBRACEC", "TTX", "SCOLON", "EQU", "STAR", "DIAGO", 
                          "SUM", "RES", "PO", "PC", "DQUOTE", "BRACEO", 
                          "BRACEC", "GREATERTHAN", "LESSTHAN", "NEWLINE" ];
	static ruleNames = [ "WS", "GO", "DOTNUM", "NUMBER", "LETTER", "LETTERSTR", 
                      "SAYS", "DISPLAYS", "IF", "ID", "INT", "NO_ID", "CHARAS", 
                      "DISPLAYEDTEXT", "CBRACEO", "CBRACEC", "TTX", "SCOLON", 
                      "EQU", "STAR", "DIAGO", "SUM", "RES", "PO", "PC", 
                      "DQUOTE", "BRACEO", "BRACEC", "GREATERTHAN", "LESSTHAN", 
                      "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

GoScriptLexer.EOF = antlr4.Token.EOF;
GoScriptLexer.WS = 1;
GoScriptLexer.GO = 2;
GoScriptLexer.DOTNUM = 3;
GoScriptLexer.NUMBER = 4;
GoScriptLexer.LETTER = 5;
GoScriptLexer.LETTERSTR = 6;
GoScriptLexer.SAYS = 7;
GoScriptLexer.DISPLAYS = 8;
GoScriptLexer.IF = 9;
GoScriptLexer.ID = 10;
GoScriptLexer.INT = 11;
GoScriptLexer.NO_ID = 12;
GoScriptLexer.CHARAS = 13;
GoScriptLexer.DISPLAYEDTEXT = 14;
GoScriptLexer.CBRACEO = 15;
GoScriptLexer.CBRACEC = 16;
GoScriptLexer.TTX = 17;
GoScriptLexer.SCOLON = 18;
GoScriptLexer.EQU = 19;
GoScriptLexer.STAR = 20;
GoScriptLexer.DIAGO = 21;
GoScriptLexer.SUM = 22;
GoScriptLexer.RES = 23;
GoScriptLexer.PO = 24;
GoScriptLexer.PC = 25;
GoScriptLexer.DQUOTE = 26;
GoScriptLexer.BRACEO = 27;
GoScriptLexer.BRACEC = 28;
GoScriptLexer.GREATERTHAN = 29;
GoScriptLexer.LESSTHAN = 30;
GoScriptLexer.NEWLINE = 31;



