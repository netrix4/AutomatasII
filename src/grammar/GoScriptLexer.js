// Generated from ./grammar/GoScript.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,30,193,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,1,0,4,0,63,8,0,11,0,12,0,64,1,0,1,0,1,1,1,1,
1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,
1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,4,8,118,8,8,11,8,12,8,119,1,
9,4,9,123,8,9,11,9,12,9,124,1,10,4,10,128,8,10,11,10,12,10,129,1,11,1,11,
1,12,4,12,135,8,12,11,12,12,12,136,1,13,3,13,140,8,13,1,13,4,13,143,8,13,
11,13,12,13,144,1,13,1,13,4,13,149,8,13,11,13,12,13,150,1,14,4,14,154,8,
14,11,14,12,14,155,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,
27,1,28,4,28,185,8,28,11,28,12,28,186,1,29,4,29,190,8,29,11,29,12,29,191,
1,186,0,30,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
25,51,26,53,27,55,28,57,29,59,30,1,0,6,3,0,9,10,13,13,32,32,2,0,65,90,97,
122,3,0,65,90,94,94,97,122,1,0,48,57,3,0,48,57,65,90,97,122,2,0,10,10,13,
13,203,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,
45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
0,0,0,57,1,0,0,0,0,59,1,0,0,0,1,62,1,0,0,0,3,68,1,0,0,0,5,71,1,0,0,0,7,78,
1,0,0,0,9,85,1,0,0,0,11,92,1,0,0,0,13,102,1,0,0,0,15,107,1,0,0,0,17,117,
1,0,0,0,19,122,1,0,0,0,21,127,1,0,0,0,23,131,1,0,0,0,25,134,1,0,0,0,27,139,
1,0,0,0,29,153,1,0,0,0,31,157,1,0,0,0,33,159,1,0,0,0,35,161,1,0,0,0,37,163,
1,0,0,0,39,165,1,0,0,0,41,167,1,0,0,0,43,169,1,0,0,0,45,171,1,0,0,0,47,173,
1,0,0,0,49,175,1,0,0,0,51,177,1,0,0,0,53,179,1,0,0,0,55,181,1,0,0,0,57,184,
1,0,0,0,59,189,1,0,0,0,61,63,7,0,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,
0,0,0,64,65,1,0,0,0,65,66,1,0,0,0,66,67,6,0,0,0,67,2,1,0,0,0,68,69,5,103,
0,0,69,70,5,111,0,0,70,4,1,0,0,0,71,72,5,100,0,0,72,73,5,111,0,0,73,74,5,
116,0,0,74,75,5,110,0,0,75,76,5,117,0,0,76,77,5,109,0,0,77,6,1,0,0,0,78,
79,5,110,0,0,79,80,5,117,0,0,80,81,5,109,0,0,81,82,5,98,0,0,82,83,5,101,
0,0,83,84,5,114,0,0,84,8,1,0,0,0,85,86,5,108,0,0,86,87,5,101,0,0,87,88,5,
116,0,0,88,89,5,116,0,0,89,90,5,101,0,0,90,91,5,114,0,0,91,10,1,0,0,0,92,
93,5,108,0,0,93,94,5,101,0,0,94,95,5,116,0,0,95,96,5,116,0,0,96,97,5,101,
0,0,97,98,5,114,0,0,98,99,5,115,0,0,99,100,5,116,0,0,100,101,5,114,0,0,101,
12,1,0,0,0,102,103,5,115,0,0,103,104,5,97,0,0,104,105,5,121,0,0,105,106,
5,115,0,0,106,14,1,0,0,0,107,108,5,100,0,0,108,109,5,105,0,0,109,110,5,115,
0,0,110,111,5,112,0,0,111,112,5,108,0,0,112,113,5,97,0,0,113,114,5,121,0,
0,114,115,5,115,0,0,115,16,1,0,0,0,116,118,7,1,0,0,117,116,1,0,0,0,118,119,
1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,120,18,1,0,0,0,121,123,7,2,0,0,122,
121,1,0,0,0,123,124,1,0,0,0,124,122,1,0,0,0,124,125,1,0,0,0,125,20,1,0,0,
0,126,128,7,1,0,0,127,126,1,0,0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,130,
1,0,0,0,130,22,1,0,0,0,131,132,7,3,0,0,132,24,1,0,0,0,133,135,3,23,11,0,
134,133,1,0,0,0,135,136,1,0,0,0,136,134,1,0,0,0,136,137,1,0,0,0,137,26,1,
0,0,0,138,140,5,45,0,0,139,138,1,0,0,0,139,140,1,0,0,0,140,142,1,0,0,0,141,
143,3,23,11,0,142,141,1,0,0,0,143,144,1,0,0,0,144,142,1,0,0,0,144,145,1,
0,0,0,145,146,1,0,0,0,146,148,5,46,0,0,147,149,3,23,11,0,148,147,1,0,0,0,
149,150,1,0,0,0,150,148,1,0,0,0,150,151,1,0,0,0,151,28,1,0,0,0,152,154,7,
4,0,0,153,152,1,0,0,0,154,155,1,0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,
30,1,0,0,0,157,158,5,123,0,0,158,32,1,0,0,0,159,160,5,125,0,0,160,34,1,0,
0,0,161,162,5,59,0,0,162,36,1,0,0,0,163,164,5,61,0,0,164,38,1,0,0,0,165,
166,5,42,0,0,166,40,1,0,0,0,167,168,5,47,0,0,168,42,1,0,0,0,169,170,5,43,
0,0,170,44,1,0,0,0,171,172,5,45,0,0,172,46,1,0,0,0,173,174,5,40,0,0,174,
48,1,0,0,0,175,176,5,41,0,0,176,50,1,0,0,0,177,178,5,34,0,0,178,52,1,0,0,
0,179,180,5,91,0,0,180,54,1,0,0,0,181,182,5,93,0,0,182,56,1,0,0,0,183,185,
9,0,0,0,184,183,1,0,0,0,185,186,1,0,0,0,186,187,1,0,0,0,186,184,1,0,0,0,
187,58,1,0,0,0,188,190,7,5,0,0,189,188,1,0,0,0,190,191,1,0,0,0,191,189,1,
0,0,0,191,192,1,0,0,0,192,60,1,0,0,0,12,0,64,119,124,129,136,139,144,150,
155,186,191,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GoScriptLexer extends antlr4.Lexer {

    static grammarFileName = "GoScript.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, "'go'", "'dotnum'", "'number'", "'letter'", 
                         "'letterstr'", "'says'", "'displays'", null, null, 
                         null, null, null, null, null, "'{'", "'}'", "';'", 
                         "'='", "'*'", "'/'", "'+'", "'-'", "'('", "')'", 
                         "'\"'", "'['", "']'" ];
	static symbolicNames = [ null, "WS", "GO", "DOTNUM", "NUMBER", "LETTER", 
                          "LETTERSTR", "SAYS", "DISPLAYS", "ID", "NO_ID", 
                          "CHARAS", "DIGIT", "INT", "FLOAT", "DISPLAYEDTEXT", 
                          "CBRACEO", "CBRACEC", "SCOLON", "EQU", "STAR", 
                          "DIAGO", "SUM", "RES", "PO", "PC", "DQUOTE", "BRACEO", 
                          "BRACEC", "TEXT", "NEWLINE" ];
	static ruleNames = [ "WS", "GO", "DOTNUM", "NUMBER", "LETTER", "LETTERSTR", 
                      "SAYS", "DISPLAYS", "ID", "NO_ID", "CHARAS", "DIGIT", 
                      "INT", "FLOAT", "DISPLAYEDTEXT", "CBRACEO", "CBRACEC", 
                      "SCOLON", "EQU", "STAR", "DIAGO", "SUM", "RES", "PO", 
                      "PC", "DQUOTE", "BRACEO", "BRACEC", "TEXT", "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

GoScriptLexer.EOF = antlr4.Token.EOF;
GoScriptLexer.WS = 1;
GoScriptLexer.GO = 2;
GoScriptLexer.DOTNUM = 3;
GoScriptLexer.NUMBER = 4;
GoScriptLexer.LETTER = 5;
GoScriptLexer.LETTERSTR = 6;
GoScriptLexer.SAYS = 7;
GoScriptLexer.DISPLAYS = 8;
GoScriptLexer.ID = 9;
GoScriptLexer.NO_ID = 10;
GoScriptLexer.CHARAS = 11;
GoScriptLexer.DIGIT = 12;
GoScriptLexer.INT = 13;
GoScriptLexer.FLOAT = 14;
GoScriptLexer.DISPLAYEDTEXT = 15;
GoScriptLexer.CBRACEO = 16;
GoScriptLexer.CBRACEC = 17;
GoScriptLexer.SCOLON = 18;
GoScriptLexer.EQU = 19;
GoScriptLexer.STAR = 20;
GoScriptLexer.DIAGO = 21;
GoScriptLexer.SUM = 22;
GoScriptLexer.RES = 23;
GoScriptLexer.PO = 24;
GoScriptLexer.PC = 25;
GoScriptLexer.DQUOTE = 26;
GoScriptLexer.BRACEO = 27;
GoScriptLexer.BRACEC = 28;
GoScriptLexer.TEXT = 29;
GoScriptLexer.NEWLINE = 30;



