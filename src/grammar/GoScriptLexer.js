// Generated from ./grammar/GoScript.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,33,252,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,1,0,4,0,69,8,0,
11,0,12,0,70,1,0,1,0,1,1,1,1,1,1,1,1,3,1,79,8,1,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,100,8,3,1,4,1,4,
1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
1,5,1,5,1,5,1,5,1,5,3,5,127,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,137,
8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,
155,8,7,1,8,1,8,1,8,1,8,3,8,161,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,
171,8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,183,8,10,
1,11,4,11,186,8,11,11,11,12,11,187,1,12,4,12,191,8,12,11,12,12,12,192,1,
13,4,13,196,8,13,11,13,12,13,197,1,14,4,14,201,8,14,11,14,12,14,202,1,15,
4,15,206,8,15,11,15,12,15,207,1,16,1,16,1,17,1,17,1,18,1,18,4,18,216,8,18,
11,18,12,18,217,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,
23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,
1,31,1,31,1,32,4,32,249,8,32,11,32,12,32,250,1,217,0,33,1,1,3,2,5,3,7,4,
9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
59,30,61,31,63,32,65,33,1,0,6,3,0,9,10,13,13,32,32,2,0,65,90,97,122,1,0,
48,57,3,0,65,90,94,94,97,122,3,0,48,57,65,90,97,122,2,0,10,10,13,13,267,
0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,1,68,1,0,0,0,
3,78,1,0,0,0,5,80,1,0,0,0,7,99,1,0,0,0,9,101,1,0,0,0,11,126,1,0,0,0,13,136,
1,0,0,0,15,154,1,0,0,0,17,160,1,0,0,0,19,170,1,0,0,0,21,182,1,0,0,0,23,185,
1,0,0,0,25,190,1,0,0,0,27,195,1,0,0,0,29,200,1,0,0,0,31,205,1,0,0,0,33,209,
1,0,0,0,35,211,1,0,0,0,37,213,1,0,0,0,39,221,1,0,0,0,41,223,1,0,0,0,43,225,
1,0,0,0,45,227,1,0,0,0,47,229,1,0,0,0,49,231,1,0,0,0,51,233,1,0,0,0,53,235,
1,0,0,0,55,237,1,0,0,0,57,239,1,0,0,0,59,241,1,0,0,0,61,243,1,0,0,0,63,245,
1,0,0,0,65,248,1,0,0,0,67,69,7,0,0,0,68,67,1,0,0,0,69,70,1,0,0,0,70,68,1,
0,0,0,70,71,1,0,0,0,71,72,1,0,0,0,72,73,6,0,0,0,73,2,1,0,0,0,74,75,5,103,
0,0,75,79,5,111,0,0,76,77,5,71,0,0,77,79,5,79,0,0,78,74,1,0,0,0,78,76,1,
0,0,0,79,4,1,0,0,0,80,81,5,100,0,0,81,82,5,111,0,0,82,83,5,116,0,0,83,84,
5,110,0,0,84,85,5,117,0,0,85,86,5,109,0,0,86,6,1,0,0,0,87,88,5,110,0,0,88,
89,5,117,0,0,89,90,5,109,0,0,90,91,5,98,0,0,91,92,5,101,0,0,92,100,5,114,
0,0,93,94,5,78,0,0,94,95,5,85,0,0,95,96,5,77,0,0,96,97,5,66,0,0,97,98,5,
69,0,0,98,100,5,82,0,0,99,87,1,0,0,0,99,93,1,0,0,0,100,8,1,0,0,0,101,102,
5,108,0,0,102,103,5,101,0,0,103,104,5,116,0,0,104,105,5,116,0,0,105,106,
5,101,0,0,106,107,5,114,0,0,107,10,1,0,0,0,108,109,5,108,0,0,109,110,5,101,
0,0,110,111,5,116,0,0,111,112,5,116,0,0,112,113,5,101,0,0,113,114,5,114,
0,0,114,115,5,115,0,0,115,116,5,116,0,0,116,127,5,114,0,0,117,118,5,76,0,
0,118,119,5,69,0,0,119,120,5,84,0,0,120,121,5,84,0,0,121,122,5,69,0,0,122,
123,5,82,0,0,123,124,5,83,0,0,124,125,5,84,0,0,125,127,5,82,0,0,126,108,
1,0,0,0,126,117,1,0,0,0,127,12,1,0,0,0,128,129,5,115,0,0,129,130,5,97,0,
0,130,131,5,121,0,0,131,137,5,115,0,0,132,133,5,83,0,0,133,134,5,65,0,0,
134,135,5,89,0,0,135,137,5,83,0,0,136,128,1,0,0,0,136,132,1,0,0,0,137,14,
1,0,0,0,138,139,5,100,0,0,139,140,5,105,0,0,140,141,5,115,0,0,141,142,5,
112,0,0,142,143,5,108,0,0,143,144,5,97,0,0,144,145,5,121,0,0,145,155,5,115,
0,0,146,147,5,68,0,0,147,148,5,73,0,0,148,149,5,83,0,0,149,150,5,80,0,0,
150,151,5,76,0,0,151,152,5,65,0,0,152,153,5,89,0,0,153,155,5,83,0,0,154,
138,1,0,0,0,154,146,1,0,0,0,155,16,1,0,0,0,156,157,5,105,0,0,157,161,5,102,
0,0,158,159,5,73,0,0,159,161,5,70,0,0,160,156,1,0,0,0,160,158,1,0,0,0,161,
18,1,0,0,0,162,163,5,116,0,0,163,164,5,114,0,0,164,165,5,117,0,0,165,171,
5,101,0,0,166,167,5,84,0,0,167,168,5,82,0,0,168,169,5,85,0,0,169,171,5,69,
0,0,170,162,1,0,0,0,170,166,1,0,0,0,171,20,1,0,0,0,172,173,5,102,0,0,173,
174,5,97,0,0,174,175,5,108,0,0,175,176,5,115,0,0,176,183,5,101,0,0,177,178,
5,70,0,0,178,179,5,65,0,0,179,180,5,76,0,0,180,181,5,83,0,0,181,183,5,69,
0,0,182,172,1,0,0,0,182,177,1,0,0,0,183,22,1,0,0,0,184,186,7,1,0,0,185,184,
1,0,0,0,186,187,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,188,24,1,0,0,0,189,
191,7,2,0,0,190,189,1,0,0,0,191,192,1,0,0,0,192,190,1,0,0,0,192,193,1,0,
0,0,193,26,1,0,0,0,194,196,7,3,0,0,195,194,1,0,0,0,196,197,1,0,0,0,197,195,
1,0,0,0,197,198,1,0,0,0,198,28,1,0,0,0,199,201,7,1,0,0,200,199,1,0,0,0,201,
202,1,0,0,0,202,200,1,0,0,0,202,203,1,0,0,0,203,30,1,0,0,0,204,206,7,4,0,
0,205,204,1,0,0,0,206,207,1,0,0,0,207,205,1,0,0,0,207,208,1,0,0,0,208,32,
1,0,0,0,209,210,5,123,0,0,210,34,1,0,0,0,211,212,5,125,0,0,212,36,1,0,0,
0,213,215,3,55,27,0,214,216,9,0,0,0,215,214,1,0,0,0,216,217,1,0,0,0,217,
218,1,0,0,0,217,215,1,0,0,0,218,219,1,0,0,0,219,220,3,55,27,0,220,38,1,0,
0,0,221,222,5,59,0,0,222,40,1,0,0,0,223,224,5,61,0,0,224,42,1,0,0,0,225,
226,5,42,0,0,226,44,1,0,0,0,227,228,5,47,0,0,228,46,1,0,0,0,229,230,5,43,
0,0,230,48,1,0,0,0,231,232,5,45,0,0,232,50,1,0,0,0,233,234,5,40,0,0,234,
52,1,0,0,0,235,236,5,41,0,0,236,54,1,0,0,0,237,238,5,34,0,0,238,56,1,0,0,
0,239,240,5,91,0,0,240,58,1,0,0,0,241,242,5,93,0,0,242,60,1,0,0,0,243,244,
5,62,0,0,244,62,1,0,0,0,245,246,5,60,0,0,246,64,1,0,0,0,247,249,7,5,0,0,
248,247,1,0,0,0,249,250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,66,1,
0,0,0,17,0,70,78,99,126,136,154,160,170,182,187,192,197,202,207,217,250,
1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GoScriptLexer extends antlr4.Lexer {

    static grammarFileName = "GoScript.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'dotnum'", null, "'letter'", 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, "'{'", "'}'", null, "';'", "'='", 
                         "'*'", "'/'", "'+'", "'-'", "'('", "')'", "'\"'", 
                         "'['", "']'", "'>'", "'<'" ];
	static symbolicNames = [ null, "WS", "GO", "DOTNUM", "NUMBER", "LETTER", 
                          "LETTERSTR", "SAYS", "DISPLAYS", "IF", "TRUE", 
                          "FALSE", "ID", "INT", "NO_ID", "CHARAS", "DISPLAYEDTEXT", 
                          "CBRACEO", "CBRACEC", "TTX", "SCOLON", "EQU", 
                          "STAR", "DIAGO", "SUM", "RES", "PO", "PC", "DQUOTE", 
                          "BRACEO", "BRACEC", "GREATERTHAN", "LESSTHAN", 
                          "NEWLINE" ];
	static ruleNames = [ "WS", "GO", "DOTNUM", "NUMBER", "LETTER", "LETTERSTR", 
                      "SAYS", "DISPLAYS", "IF", "TRUE", "FALSE", "ID", "INT", 
                      "NO_ID", "CHARAS", "DISPLAYEDTEXT", "CBRACEO", "CBRACEC", 
                      "TTX", "SCOLON", "EQU", "STAR", "DIAGO", "SUM", "RES", 
                      "PO", "PC", "DQUOTE", "BRACEO", "BRACEC", "GREATERTHAN", 
                      "LESSTHAN", "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

GoScriptLexer.EOF = antlr4.Token.EOF;
GoScriptLexer.WS = 1;
GoScriptLexer.GO = 2;
GoScriptLexer.DOTNUM = 3;
GoScriptLexer.NUMBER = 4;
GoScriptLexer.LETTER = 5;
GoScriptLexer.LETTERSTR = 6;
GoScriptLexer.SAYS = 7;
GoScriptLexer.DISPLAYS = 8;
GoScriptLexer.IF = 9;
GoScriptLexer.TRUE = 10;
GoScriptLexer.FALSE = 11;
GoScriptLexer.ID = 12;
GoScriptLexer.INT = 13;
GoScriptLexer.NO_ID = 14;
GoScriptLexer.CHARAS = 15;
GoScriptLexer.DISPLAYEDTEXT = 16;
GoScriptLexer.CBRACEO = 17;
GoScriptLexer.CBRACEC = 18;
GoScriptLexer.TTX = 19;
GoScriptLexer.SCOLON = 20;
GoScriptLexer.EQU = 21;
GoScriptLexer.STAR = 22;
GoScriptLexer.DIAGO = 23;
GoScriptLexer.SUM = 24;
GoScriptLexer.RES = 25;
GoScriptLexer.PO = 26;
GoScriptLexer.PC = 27;
GoScriptLexer.DQUOTE = 28;
GoScriptLexer.BRACEO = 29;
GoScriptLexer.BRACEC = 30;
GoScriptLexer.GREATERTHAN = 31;
GoScriptLexer.LESSTHAN = 32;
GoScriptLexer.NEWLINE = 33;



